// const app = require("express")();
// const axios = require("axios");
// const port = 5000;
// const baseUrl = 'http://192.168.15.157:5001'

// app.get("/", async (req, res) => {
//     const login = await axios(`${baseUrl}/LoginUsuario`).then(resp => resp.data);
//     const tabela = await axios(`${baseUrl}/Geral`).then(resp => resp.data);
//     let dado = []
//     let contador = 1
//     // let dadoFinal = []

//     // for (let i = 0; i < login.length; i++) {
//     //     dado.push({ name: login[i].nomeCompleto })
//     // }

   
//         for (let j = 0; j < tabela.length; j++) {
//             dado.push(tabela[j].Tecnico)
//         }
    
    
//         let quantidadeNomes = dado.reduce(function (todosNomes, dado) {
//             if (dado in todosNomes) {
//               todosNomes[dado]++;
//             } else {
//               todosNomes[dado] = 1;
//             }
//             return todosNomes;
//           }, {});

//           let arr = Object.entries(quantidadeNomes).map(([name, y]) => ({name, y}));
          
//   console.log(arr)
// })



// app.listen(port, () => {
//     try {
//         console.log("Servidor Online")
//     } catch (err) {
//         console.log("Errro: " + err)
//     }
// })


import React from 'react';
import ModalProd from '../../../Modal/ModalTecnico';
import PuxarDados from '../Estrutura/PuxarDados';
import Grafico from '../../../Graficos/Grafico';

export default class ProdDiaria extends React.Component {
    render() {
        return (
            <>
                <ModalProd corModal="secondary" nomeBotao="Prod. Diaria" tamanho="xl"
                    classe='h4 fw-bold'
                    Relatorio={
                        <Grafico tipo="column" titulo="Produtividade por Dia"
                            formate='<span style="color:{point.color}">{point.name}</span> : <b>{point.y:1f}</b> do total<br/>'
                            texto='{point.y:1f}'
                            nomeSerie="Dia"
                            dado={this.props.dadosDia}
                        />
                    }
                />
            </>
        )
    }
}

export async function BuscarDadosProdDia(tecnico, dia, mes, ano) {
    const tabela = await PuxarDados("Geral")
    let dadoDia = []
 

    for (let i = 0; i < tabela.length; i++) {
        //Todos
        if((tecnico === "Todos")&&(dia === "Todos")&& (mes === "Todos") && (ano === "Todos")){
            DadosPorDia(tabela[i], dadoDia)
        }else
        if((tecnico === "Todos")&&(dia === "Todos")&& (mes === "Todos") && (ano === `${tabela[i].Ano}`)){
           DadosPorDia(tabela[i], dadoDia)
        }else
        if((tecnico === "Todos")&&(dia === "Todos")&& (mes === `${tabela[i].Mes}`) && (ano === `${tabela[i].Ano}`)){
           DadosPorDia(tabela[i], dadoDia)
        }else
        if((tecnico === "Todos")&&(dia === `${tabela[i].Dia}`)&& (mes === `${tabela[i].Mes}`) && (ano === `${tabela[i].Ano}`)){
           DadosPorDia(tabela[i], dadoDia)
        }else
        //Tecnico
        if((tecnico === `${tabela[i].Tecnico}`)&&(dia === "Todos")&& (mes === "Todos") && (ano === "Todos")){
           DadosPorDia(tabela[i], dadoDia)
        }else
        if((tecnico === `${tabela[i].Tecnico}`)&&(dia === "Todos")&& (mes === "Todos") && (ano === `${tabela[i].Ano}`)){
           DadosPorDia(tabela[i], dadoDia)
        }else
        if((tecnico === `${tabela[i].Tecnico}`)&&(dia === "Todos")&& (mes === `${tabela[i].Mes}`) && (ano === `${tabela[i].Ano}`)){
           DadosPorDia(tabela[i], dadoDia)
        }else
        if((tecnico === `${tabela[i].Tecnico}`)&&(dia === `${tabela[i].Dia}`)&& (mes === `${tabela[i].Mes}`) && (ano === `${tabela[i].Ano}`)){
           DadosPorDia(tabela[i], dadoDia)
        }

    }

    let quantidadeDia = dadoDia.reduce(function (todosNomes, dadoDia) {
                    if (dadoDia in todosNomes) {
                      todosNomes[dadoDia]++;
                    } else {
                      todosNomes[dadoDia] = 1;
                    }
                    return todosNomes;
                  }, {});

    let dadosDiaFinal = Object.entries(quantidadeDia).map(([name, y]) => ({name, y}));

    return dadosDiaFinal
    
}


function DadosPorDia(tabela, dados) {
    if((undefined !== tabela.Dia) && ("" !== tabela.Dia)){
        dados.push(`${tabela.Dia}`)    
    }
}

